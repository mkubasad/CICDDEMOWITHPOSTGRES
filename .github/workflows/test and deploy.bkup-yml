name: Django Tests

on:
  push: 
    branches: 
      - main

  pull_request:
    branches:
      - main

  workflow_dispatch:

jobs:
  build: 
    runs-on: ubuntu-latest
    steps: 
    - uses: actions/checkout@v2
    - name: Set up Python 
      uses: actions/setup-python@v2
      with: 
        python-version: 3.7
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Lint with ruff
      run: |
        pip install ruff
        ruff check .
    - name: Make django DB migrations
      run: |
        python3 manage.py migrate 
      
    - name: Coverage report
      run: |
        pip install coverage
        coverage run manage.py test
        coverage report
    - name: Django Testing
      run: |
        python3 manage.py test
  
  ##Deployment on successful build and test###############
  deploy:
    needs: build
    # runs-on: self-hosted
    runs-on: ubuntu-latest
    name: Deploy
    steps:
      # Configure AWS credentials
      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
      # - name: Login to Amazon ECR
      #   id: login-ecr
      #   uses: aws-actions/amazon-ecr-login@v1
      - name: ssh into ec2 server
        run: |
          ssh -i 
      - name: Set up Python 
        uses: actions/setup-python@v2
        with: 
          python-version: 3.7x  
      - name: Update OS and any security patches on the server
        run: | 
          sudo apt-get update && apt-get upgrade
          sudo hostnamectl set-hostname CiCdDemoServer
          echo ${{ secrets.IP_ADDRESS }} CiCdDemoServer >> /etc/hosts
      - name: Create/activate virtual environment
      # If the venv already exists, activate it. Otherwise create a venv and activate it.
        run: | 
          source ./myEnv/bin/activate && python -m venv myEnv
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r deploy/requirements.txt
          sudo apt update && sudo apt install gunicorn -y
          deactivate # deactivate the virtual enviornment
      - name: Install and configure nginx
        run: |
          sudo cp ./deploy/nginx/mySite /etc/nginx/sites-available/
          sudo apt update && sudo apt install nginx -y
      - name: Configure gunicorn service
        run: |
          sduo ./deploy/gunicorn/gunicorn.service /etc/systemd/system/
      # Update the Origin Path
      - name: Update OriginPath
        uses: mean-dao/aws-webdeploy@v1
        with:
          ORIGIN_PATH: '/v1/new_path'
          AWS_DISTRIBUTION_ID: ${{ secrets.DISTRIBUTION_ID }}
      - name: copy deploy-settings file
        run: |
          cp ./deploy/deploy-settings.py ./settings.py
      # - name: Start the servers
        # run: | 
            # cp run.sh
            # chmod +x run.sh
            # ./run.sh